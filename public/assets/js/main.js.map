{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["\"use strict\";\n\n//Const\nconst button = document.querySelector(\".js-button\");\nconst showList = document.querySelector(\".js-list\");\nconst userValue = document.querySelector(\".js-input\");\nconst favlist = document.querySelector(\".js-favlist\");\n\n//arrays (vacíos o no)\nlet favShow = []; //array para los favoritos\n\nlet shows = []; //array para resultados\n\n//Funciones\nfunction handleButton(ev) {\n  ev.preventDefault();\n  queryResults();\n}\n\n//Fetch\nfunction queryResults() {\n  let userSearch = userValue.value;\n  fetch(`//api.tvmaze.com/search/shows?q=${userSearch}`)\n    .then((response) => response.json())\n    .then((results) => {\n      shows = results;\n      paintResults();\n    });\n}\n//Función para pintar cada result obtenido.\nfunction paintResults() {\n  let html = \"\";\n  for (let result of shows) {\n    const show = result.show;\n    const name = show.name;\n    const image = show.image;\n    const id = show.id;\n\n    let imageUrl = \"\";\n    if (image) {\n      imageUrl = image.medium;\n    } else {\n      imageUrl = \"https://via.placeholder.com/210x295/ffffff/666666/?text=TV\";\n    }\n    html += `<li class=\"card list__item\" id=\"${id}\">\n    <h4 class=\"list__title\">${name}</h4>\n     <img  src=\"${imageUrl}\">\n     </li>`;\n  }\n  showList.innerHTML = html;\n\n  const allShows = document.querySelectorAll(\".card\");\n  for (let card of allShows) {\n    card.addEventListener(\"click\", handleClickedShow);\n  }\n}\n\n//Función del evento click para cada uno de los shows.\nfunction handleClickedShow(ev) {\n  const clickedShowLi = ev.currentTarget;\n  const clickedShowId = parseInt(clickedShowLi.id);\n  //onsole.log(clickedShowId);\n  const clickedShowObject = shows.find((serie) => {\n    return serie.show.id === clickedShowId;\n  });\n\n  //Para meter en el array el show clickado\n  const favoriteShowFound = favShow.findIndex((favorite) => {\n    return favorite.show.id === clickedShowId;\n  });\n  //console.log(favoriteShowFound); crear una función?\n  if (favoriteShowFound === -1) {\n    favShow.push(clickedShowObject);\n  } else {\n    favShow.splice(favoriteShowFound, 1);\n  }\n  //console.log(favShow);\n  paintFavorites();\n  clickedShowLi.classList.toggle(\"selectedCard\");\n}\n\nfunction paintFavorites() {\n  let html = \"\";\n  for (let favOne of favShow) {\n    const show = favOne.show;\n    const name = show.name;\n    const image = show.image;\n    const id = show.id;\n\n    let imageUrl = \"\";\n    if (image) {\n      imageUrl = image.medium;\n    } else {\n      imageUrl = \"https://via.placeholder.com/210x295/ffffff/666666/?text=TV\";\n    }\n    html += `<li class=\"card list__item\" id=\"${id}\">\n    <h4 class=\"list__title\">${name}</h4>\n     <img  src=\"${imageUrl}\">\n     </li>`;\n  }\n  favlist.innerHTML = html;\n\n  const allShows = document.querySelectorAll(\".card\");\n  for (let card of allShows) {\n    card.addEventListener(\"click\", handleClickedShow);\n  }\n}\n\n//Eventos\n\nbutton.addEventListener(\"click\", handleButton);\n"]}